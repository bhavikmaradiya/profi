// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import './env.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return AppEnvironment.environment == Environment.dev
            ? androidDev
            : androidProd;
      case TargetPlatform.iOS:
        return AppEnvironment.environment == Environment.prod
            ? iosDev
            : iosProd;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions androidDev = FirebaseOptions(
    apiKey: 'AIzaSyCEqZhtq4jAmeMe_x5ZGqB6IKjI8ZXZa1k',
    appId: '1:124017076586:android:f43e2435e863cb03d49d13',
    messagingSenderId: '124017076586',
    projectId: 'profi-406ea',
    storageBucket: 'profi-406ea.appspot.com',
  );

  static const FirebaseOptions iosDev = FirebaseOptions(
    apiKey: 'AIzaSyCtE0WkWQE-MT9MHtorO0-alotXDvGQu8Y',
    appId: '1:124017076586:ios:a735156e94b804aed49d13',
    messagingSenderId: '124017076586',
    projectId: 'profi-406ea',
    storageBucket: 'profi-406ea.appspot.com',
    iosClientId:
        '124017076586-mui170hui78ovm9bgcad8q84rfsrn1hv.apps.googleusercontent.com',
    iosBundleId: 'com.wings.profi',
  );

  static const FirebaseOptions androidProd = FirebaseOptions(
    apiKey: 'AIzaSyD-EumOH-r1t-HNTe9NWmBRmPp9R7Uz-i8',
    appId: '1:982680893567:android:fa41a9e161b8efc236e74a',
    messagingSenderId: '982680893567',
    projectId: 'profi-abbd6',
    storageBucket: 'profi-abbd6.appspot.com',
  );

  static const FirebaseOptions iosProd = FirebaseOptions(
    apiKey: 'AIzaSyATkJyUIY0rk5rKWw3AR1kgD8bHYkZTfj8',
    appId: '1:982680893567:ios:8dcb3cd459a7b85136e74a',
    messagingSenderId: '982680893567',
    projectId: 'profi-abbd6',
    storageBucket: 'profi-abbd6.appspot.com',
    iosBundleId: 'com.wings.profi',
  );
}
